import unittest\\nimport tempfile\\nimport shutil\\nimport os\\nfrom pathlib import Path\\nimport yaml\\nfrom deply.collectors import FileRegexCollector, ClassInheritsCollector\\nfrom deply.main import main\\n\\nclass TestCollectors(unittest.TestCase):\\n    def setUp(self):\\n        self.test_dir = tempfile.mkdtemp()\\n        self.test_project_dir = Path(self.test_dir) / 'test_project'\\n        self.test_project_dir.mkdir()\\n\\n    def tearDown(self):\\n        shutil.rmtree(self.test_dir)\\n\\n    def test_class_inherits_collector(self):\\n        collector_config = {\\"base_class\\": \\\"BaseModel\\"}\\n        paths = [str(self.test_project_dir)]\\n        exclude_files = []\\n        collector = ClassInheritsCollector(collector_config, paths, exclude_files)\\n        collected_elements = collector.collect()\\n        collected_class_names = {element.name for element in collected_elements}\\n        expected_classes = {'UserModel'}\\n        self.assertEqual(collected_class_names, expected_classes)\\n\\n    def test_file_regex_collector(self):\\n        collector_config = {\\"regex\\": r'.*controller.py$'}\\n        paths = [str(self.test_project_dir)]\\n        exclude_files = []\\n        collector = FileRegexCollector(collector_config, paths, exclude_files)\\n        collected_elements = collector.collect()\\n        collected_class_names = {element.name for element in collected_elements}\\n        expected_classes = {'BaseController', 'UserController'}\\n        self.assertEqual(collected_class_names, expected_classes)\\n\\nif __name__ == '___main__':\\n    unittest.main()