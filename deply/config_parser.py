from pathlib import Path\nfrom typing import Any, Dict\nimport yaml\n\nclass ConfigParser:\n    def __init__(self, config_path: Path):\n        self.config_path = config_path\n\n    def parse(self) -> Dict[str, Any]:\n        try:\n            with self.config_path.open('r') as file:\n                config = yaml.safe_load(file)\n        except FileNotFoundError:\n            print(f'The file {self.config_path} was not found.')\n            config = {}\n        except Exception as e:\n            print(f'An error occurred while reading the file: {e}')\n            config = {}\n\n        config = config.get('deply', {}) if config else {}\n        config.setdefault('paths', [])\n        config.setdefault('exclude_files', [])\n        config.setdefault('layers', [])\n        config.setdefault('ruleset', {})\n\n        if not config['paths']: \n            config['paths'] = [str(self.config_path.parent)]\n\n        return config\n